name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install scikit-learn pillow matplotlib seaborn pandas numpy streamlit black
        
    - name: Format code
      run: |
        make format
        
    - name: Use existing model
      run: |
        make use-existing
        
    - name: Generate evaluation report
      run: |
        make eval-simple
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install scikit-learn pillow matplotlib seaborn pandas numpy streamlit black
        
    - name: Login to Hugging Face
      run: |
        pip install -U "huggingface_hub[cli]"
        huggingface-cli login --token ${{ secrets.HF_TOKEN }}
        
    - name: Deploy to Hugging Face
      env:
        HF: ${{ secrets.HF_TOKEN }}
        HF_USERNAME: ${{ github.repository_owner }}
      run: |
        make deploy 