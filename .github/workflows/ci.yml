name: Continuous Integration
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions: write-all

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install scikit-learn pillow matplotlib seaborn pandas numpy streamlit black datasets huggingface_hub kaggle

    - name: Format code
      run: |
        make format

    - name: Set up Kaggle API
      run: |
        mkdir -p ~/.kaggle
        echo '{"username":"${{ secrets.KAGGLE_USERNAME }}","key":"${{ secrets.KAGGLE_KEY }}"}' > ~/.kaggle/kaggle.json
        chmod 600 ~/.kaggle/kaggle.json

    - name: Fetch training data from Kaggle
      run: |
        python scripts/fetch_data.py

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build training Docker image
      run: |
        docker build -f Dockerfile.training -t pet-breed-classifier:training-data .
        docker tag pet-breed-classifier:training-data ${{ secrets.DOCKER_USERNAME }}/pet-breed-classifier:training-data
        docker push ${{ secrets.DOCKER_USERNAME }}/pet-breed-classifier:training-data

    - name: Run training pipeline in Docker
      run: |
        docker run --rm -v $(pwd)/data:/app/data -v $(pwd)/models:/app/models -v $(pwd)/outputs:/app/outputs pet-breed-classifier:training-data python run_pipeline.py

    - name: Build production Docker image with trained model
      run: |
        docker build -t pet-breed-classifier:latest .
        docker tag pet-breed-classifier:latest ${{ secrets.DOCKER_USERNAME }}/pet-breed-classifier:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/pet-breed-classifier:latest

    - name: Generate evaluation report
      run: |
        make eval-simple

    - name: Deploy to Hugging Face
      env:
        HF_USERNAME: ${{ secrets.HF_USERNAME }}
        HF: ${{ secrets.HF_TOKEN_NEW }}
      run: |
        make deploy

    - name: Update Branch
      env:
          NAME: ${{ secrets.USER_NAME }}
          EMAIL: ${{ secrets.USER_EMAIL }}
      run: |
        make update-branch USER_NAME=$NAME USER_EMAIL=$EMAIL 