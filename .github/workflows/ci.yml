name: Continuous Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Format code
      run: |
        make format

    - name: Test imports
      run: |
        python -c "
        import streamlit
        import torch
        import torchvision
        import autogluon.multimodal
        import scripts.preprocess
        import scripts.train_model
        import scripts.validate_model
        print('‚úÖ All imports successful')
        "

    - name: Test data fetching
      run: |
        python scripts/fetch_data.py
        if [ -d "data/pet_breeds" ] && [ "$(ls -A data/pet_breeds)" ]; then
          echo "‚úÖ Data fetching successful"
        else
          echo "‚ùå Data fetching failed"
          exit 1
        fi

    - name: Test Docker build
      run: |
        docker build -t pet-breed-classifier:test .
        docker run --rm pet-breed-classifier:test python -c "import streamlit; print('‚úÖ Docker test successful')"

    - name: Test summary
      run: |
        echo "üéâ All CI tests passed!"
        echo "‚úÖ Code formatting is correct"
        echo "‚úÖ All imports work correctly"
        echo "‚úÖ Data fetching works"
        echo "‚úÖ Docker build works" 